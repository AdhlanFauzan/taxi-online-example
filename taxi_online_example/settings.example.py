# -*- coding: utf-8 -*-

"""
Django settings for taxi_online_example project.

Generated by 'django-admin startproject' using Django 1.8.6.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os
import sys
import logging.config


TESTING = sys.argv[1:2] == ['test']

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '5&$f-@u^v+v55slree5*uome!95g%t9d9(h4dp&te3*u5r&r6&'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

DATETIME_FORMAT = "U"
DATETIME_INPUT_FORMATS = ("%s",)


# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'taxi_online_example'
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

ROOT_URLCONF = 'taxi_online_example.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'taxi_online_example.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'taxi_online_example',
        'USER': 'taxi',
        'PASSWORD': 'taxi',
        'HOST': 'localhost',
        'PORT': '',
    }
}

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny'
    ]
}

LOGGING = {
    'version': 1,
    'disable_existing_loggers': True,
    'formatters': {
        'verbose': {
            'format': '[%(levelname)s][%(asctime)s][%(module)s][%(message)s]'
        },
        'simple': {
            'format': '[%(levelname)s][%(identifier)s][%(message)s]'
        },
    },
    'handlers': {
        'console': {
            'formatter': 'simple',
            'level': 'DEBUG',
            'class': 'logging.StreamHandler'
        },
        'django_requests': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': '/'.join([BASE_DIR , 'logs', 'django.requests.log'])
        },
        'django_api_requests': {
            'formatter': 'verbose',
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': '/'.join([BASE_DIR , 'logs', 'django.api.requests.log'])
        },
        'processing': {
            'formatter': 'simple',
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': '/'.join([BASE_DIR , 'logs', 'processing.log'])
        }
    },
    'loggers': {
        'django.request': {
            'handlers': ['django_requests'],
            'level': 'DEBUG',
            'propagate': True,
        },
        'django.api.request': {
            'handlers': ['django_api_requests'],
            'level': 'INFO',
            'propagate': True,
        },
        'processing': {
            'handlers': ['processing', 'console'],
            'level': 'INFO',
            'propagate': True,
        }
    },
}
logging.config.dictConfig(LOGGING)

# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'
